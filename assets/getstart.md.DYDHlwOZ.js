import{_ as a,c as e,o as r,V as o}from"./chunks/framework.BEWajc7s.js";const m=JSON.parse('{"title":"Cocinando con Laravel","description":"","frontmatter":{},"headers":[],"relativePath":"getstart.md","filePath":"getstart.md"}'),n={name:"getstart.md"},s=o('<h1 id="cocinando-con-laravel" tabindex="-1">Cocinando con Laravel <a class="header-anchor" href="#cocinando-con-laravel" aria-label="Permalink to &quot;Cocinando con Laravel&quot;">​</a></h1><p>Laravel es un framework de código abierto para desarrollar aplicaciones y servicios web con PHP. Su filosofía es desarrollar código PHP de forma elegante y simple, evitando el &quot;código espagueti&quot;. En este lugar encotrara guías, recursos y tutoriales relacionados con Laravel.</p><h2 id="la-guia-definitiva-para-la-validacion-de-laravel" tabindex="-1"><a href="./laravel-validation.html">La Guía Definitiva para la Validación de Laravel</a> <a class="header-anchor" href="#la-guia-definitiva-para-la-validacion-de-laravel" aria-label="Permalink to &quot;[La Guía Definitiva para la Validación de Laravel](./laravel-validation.html)&quot;">​</a></h2><p>La validación es una parte importante de cualquier aplicación web. Puede ayudar a prevenir vulnerabilidades de seguridad, corrupción de datos y una gran cantidad de otros problemas que pueden surgir cuando se trabaja con la entrada del usuario.</p><h2 id="uso-de-eloquent-factories-con-proveedores-de-datos-phpunit" tabindex="-1"><a href="./eloquent-factories-with-phpunit-data-providers.html">Uso de Eloquent Factories con Proveedores de Datos PHPUnit</a> <a class="header-anchor" href="#uso-de-eloquent-factories-con-proveedores-de-datos-phpunit" aria-label="Permalink to &quot;[Uso de Eloquent Factories con Proveedores de Datos PHPUnit](./eloquent-factories-with-phpunit-data-providers.html)&quot;">​</a></h2><p>Si tiene un caso de prueba que desea probar con una variedad de datos, es posible que desee recurrir a los proveedores de datos de PHPUnit con modelos Eloquent.</p><h2 id="afirmando-una-estructura-de-respuesta-json-en-laravel" tabindex="-1"><a href="./asserting-json-response-structure-in-laravel.html">Afirmando una Estructura de Respuesta JSON en Laravel</a> <a class="header-anchor" href="#afirmando-una-estructura-de-respuesta-json-en-laravel" aria-label="Permalink to &quot;[Afirmando una Estructura de Respuesta JSON en Laravel](./asserting-json-response-structure-in-laravel)&quot;">​</a></h2><p>Al escribir pruebas para respuestas de API en Laravel, puede resultar útil validar la estructura de la respuesta. Laravel cuenta con el método <code>assertJson()</code>, que se puede utilizar para verificar valores JSON en una respuesta de prueba determinada.</p><h2 id="aprenda-a-dominar-los-alcances-de-consulta-en-laravel" tabindex="-1"><a href="./query-scopes.html">Aprenda a Dominar los Alcances de Consulta en Laravel</a> <a class="header-anchor" href="#aprenda-a-dominar-los-alcances-de-consulta-en-laravel" aria-label="Permalink to &quot;[Aprenda a Dominar los Alcances de Consulta en Laravel](./query-scopes)&quot;">​</a></h2><p>Al crear aplicaciones Laravel, es probable que deba escribir consultas que tengan restricciones que se utilicen en varios lugares de la aplicación. En Laravel, podemos utilizar alcances de consulta para ayudarnos a mantener estas restricciones ordenadas y reutilizables en un solo lugar.</p><h2 id="una-guia-para-los-eventos-modelo-de-laravel" tabindex="-1"><a href="./model-events.html">Una Guía para los Eventos Modelo de Laravel</a> <a class="header-anchor" href="#una-guia-para-los-eventos-modelo-de-laravel" aria-label="Permalink to &quot;[Una Guía para los Eventos Modelo de Laravel](./model-events)&quot;">​</a></h2><p>Los eventos de modelo son una característica muy útil en Laravel que puede ayudarte a ejecutar lógica automáticamente cuando se realizan ciertas acciones en tus modelos Eloquent. Pero a veces pueden provocar efectos secundarios extraños si no se usan correctamente.</p>',12),t=[s];function l(i,d,c,u,p,v){return r(),e("div",null,t)}const f=a(n,[["render",l]]);export{m as __pageData,f as default};
